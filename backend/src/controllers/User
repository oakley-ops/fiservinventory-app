const User = require('../models/User');
const bcryptjs = require('bcryptjs');
const jwt = require('jsonwebtoken');

class UserController {
  constructor() {
    this.pool = new Pool({
      // ... your database configuration
    });
  }

  async registerUser(req, res) {
    const { username, password, role } = req.body;

    try {
      // Hash the password
      const hashedPassword = await bcryptjs.hash(password, 10); 

      const result = await this.pool.query(
        'INSERT INTO users (username, password, role) VALUES ($1, $2, $3) RETURNING *',
        [username, hashedPassword, role]
      );
      res.status(201).json(result.rows[0]);
    } catch (error) {
      console.error(error);
      res.status(500).send('Error registering user');
    }
  }

  async loginUser(req, res) {
    const { username, password } = req.body;

    try {
      const result = await this.pool.query(
        'SELECT * FROM users WHERE username = $1',
        [username]
      );

      if (result.rows.length === 0) {
        return res.status(401).send('Invalid credentials'); 
      }

      const user = new User(...result.rows[0]); 
      const isMatch = await user.comparePassword(password);

      if (!isMatch) {
        return res.status(401).send('Invalid credentials');
      }

      // Generate JWT
      const token = jwt.sign({ userId: user.user_id }, 'your_jwt_secret'); 
      res.json({ token });
    } catch (error) {
      console.error(error);
      res.status(500).send('Error logging in');
    }
  }

  // ... other methods for user management (if needed)
}

module.exports = UserController;